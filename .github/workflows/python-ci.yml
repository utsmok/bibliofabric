name: Python CI

on:
  push:
    branches: ["main"]
    tags:
      - 'v*.*.*'
      - 'v*.*'
      - 'v*'
  pull_request:
    branches: ["main"]

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install & setup uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install dependencies
        run: |
          uv sync --all-groups --all-extras

      - name: Lint, format, and fix with ruff
        run: |
          uv run ruff check src/ --fix
          uv run ruff format src/

      - name: Test with pytest
        run: |
          uv run pytest --cov=myproj tests/

      - name: Build package
        run: |
          uv build


  build-docs:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install & setup uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install dependencies
        run: |
          uv sync --all-groups --all-extras

      - name: Build & deploy docs
        run: |
          uv run mkdocs gh-deploy --force

  publish-pypi:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    environment:
      name: pypi
      url: https://pypi.org/p/bibliofabric
    permissions:
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install & setup uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install dependencies
        run: |
          uv sync --all-groups --all-extras


      - name: Build wheel and sdist
        run: |
          uv run hatch build

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
